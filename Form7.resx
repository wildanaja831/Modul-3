<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="PictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>